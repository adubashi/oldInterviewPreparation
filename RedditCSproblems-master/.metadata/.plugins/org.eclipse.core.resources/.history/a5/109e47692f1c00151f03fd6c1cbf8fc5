import levelOrder.BNode;


public class validSumTree {

	/**
	 * @param args
	 */
	
	public static class BNode{
		int data;
		BNode left;
		BNode right;
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}


    
	
	public static boolean isValidSumTree(BNode root){
		int leftSum = 0;
		int rightSum = 0;
		
		
		if(root == null || (root.left == null && root.right == null)){
			return true;
		}
		/*
		 * if( isSumTree(node->left) && isSumTree(node->right))
    {
        // Get the sum of nodes in left subtree
        if(node->left == NULL)
            ls = 0;
        else if(isLeaf(node->left))
            ls = node->left->data;
        else
            ls = 2*(node->left->data);
 
        // Get the sum of nodes in right subtree
        if(node->right == NULL)
            rs = 0;
        else if(isLeaf(node->right))
            rs = node->right->data;
        else
            rs = 2*(node->right->data);
 
        /* If root's data is equal to sum of nodes in left
           and right subtrees then return 1 else return 0*/
		
		
	}

}
