
public class Heap {
	public int[] array;
	public int count;
	public int capacity;
	public int heap_type;
	
	public Heap(int capacity, int heap_type){
		this.heap_type = heap_type;
		this.count = 0;
		this.capacity = capacity;
		this.array = new int[capacity];
	}
	
	public int parent(int i){
		if( i <= 0 || i >= this.count){
			return -1;
		}
		return i - 1/2;
	}
	
	
	public int LeftChild(int i ){
		int left = 2 * i + 1;
		if(left >= this.count){
			return -1;
		}
		return left;
	}
	
	public int RightChild(int i ){
		int right = 2 * i + 2;
		if(right >= this.count){
			return -1;
		}
		return right;
	}
	
	public int GetMaximum(){
		if(this.count == 0){
			return -1;
		}
		return this.array[0];
		
	}
	
	public void PercolateDown(int i){
		int l, r, max, temp;
		l = LeftChild(i);
		r = RightChild(i);
		if(l != -1 && this.array[l] > this.array[i]){
			max = l;
		} else {
			max = i;
		}
		
		if(r != -1 && this.array[r] > this.array[max]){
			max = r;
		}
		if(max != i){
			temp = this.array[i];
		}
	}

}
